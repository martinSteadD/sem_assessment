# Name of the workflow as it appears in the GitHub Actions UI
name: A workflow for the Population App

# This will trigger the workflow on every push to the repository
on: push

jobs:
  build:
    # Job name shown in the Actions UI
    name: population action

    # Specifies the running environment (Ubuntu 22.04)
    runs-on: ubuntu-22.04

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout
        uses: actions/checkout@v4
        # This pulls the latest code from the repo into the running environment

      # Step 2: Sets up Java Development Kit (JDK) version 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'         # Specifies the Java version
          distribution: 'adopt'      # Uses AdoptOpenJDK distribution

      # Step 3: Creates a Docker network and starts a MongoDB container
      - name: Setup network
        run: |
          docker network create --driver bridge sem_assessment
          docker pull mongo
          docker run -d --name mongo-dbserver --network sem_assessment mongo
        # This sets up a bridge network and runs MongoDB in a container named mongo-dbserver

      # Step 4: Compiles and packages the Java app using Maven
      - name: Package with Maven
        run: mvn clean compile assembly:single
        # Cleans previous builds, compiles the code, and packages it into a single JAR

      # Step 5: Builds the Docker image for the application
      - name: Build
        run: docker build -t sem_assessment .
        # Builds the Docker image using the Dockerfile in the repo

      # Step 6: Runs the Docker image and connect it to the MongoDB container
      - name: Run image
        run: docker run --network sem_assessment --name sem_assessmentcontainer sem_assessment
        # Runs the app container and links it to the MongoDB container via the shared network

      # Step 7: Outputs logs from the running container
      - name: View logs
        run: docker logs sem_assessmentcontainer
        # Displays the container logs for debugging or verification

